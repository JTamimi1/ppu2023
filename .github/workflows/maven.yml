# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 18
      uses: actions/setup-java@v3
      with:
        java-version: '18'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml
      
  Deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: fetch code
      uses: actions/checkout@v3
    - name: Set up JDK 18
      uses: actions/setup-java@v3
      with:
       java-version: 18
       distribution: 'temurin'
       cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    - name: deploy
      uses: appleboy/scp-action@master
      env:
       host: ${{ secrets.AZURE_SERVER_IP }}
       username: ${{ secrets.AZURE_USR }}
       key: ${{ secrets.AZURE_SERVER_KEY }}
      with:
       source: "target/1.0-SNAPSHOT.jar"
       target: "deployment"
    - name: run jar via ssh
      uses: fifsky/ssh-action@master
      with:
       script: |
        cd ~/deployment/target
        java -jar 1.0-SNAPSHOT.jar
       host: ${{ secrets.AZURE_SERVER_IP }}
       user: ${{ secrets.AZURE_USR }}
       key: ${{ secrets.AZURE_SERVER_KEY }}
