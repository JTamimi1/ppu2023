# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven
# test
name: Java CI with Maven

on:
  workflow_dispatch:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

      
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 18
      uses: actions/setup-java@v1
      with:
        java-version: 18
    - name: Build with Maven
      run: mvn -B clean package
    - name: Archive jar file
      uses: actions/upload-artifact@v2
      with:
        name: myjar
        path: target/ppu-1.0-SNAPSHOT.jar
  
  docker:
    name: build image and publish
    runs-on: ubuntu-latest
    env:
      env-file: my-environment-file.env
      CLUSTER_NAME: Swecluster
      RESOURSE_GROUP: SWE
      
    needs: [build]
    steps:
      - uses: actions/checkout@v1
      - name: Login to Docker Hub
        run: docker login -u ${{ secrets.DOCKER_USERNAME1 }}
          -p ${{ secrets.DOCKER_PASSWORD1 }}
          
      - name: Set up JDK 18
        uses: actions/setup-java@v1
        with:
         java-version: 18
      - name: Build with Maven
        run: mvn -B clean package
        
      - name: Build Docker image
        run: docker build -t jtamimi/ppu2023:latest .
      - name: Publish Docker image
        run: docker push jtamimi/ppu2023
        
      - uses: azure/login@v1
        with:
         client-id: ${{ secrets.AZURE_CLIENT_ID }}
         tenant-id: ${{ secrets.AZURE_TENANT_ID }}
         subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - uses: azure/aks-set-context@v3
        with:
          cluster-name: ${{ env.CLUSTER_NAME }}
          resource-group: ${{ env.RESOURSE_GROUP }}
         

      - uses: Azure/k8s-deploy@v1
        with:
          manifests: |
            kubernetes/deploy.yaml


#   Deploy-To-Azure:
#     needs: [docker]
#     runs-on: ubuntu-18.04
#     steps:
#       - name: ssh connect and run container
#         uses: fifsky/ssh-action@master
#         with: 
#          command: |
          
#           docker pull jtamimi/ppu2023:latest
                   
#           sudo docker container stop mycontainer
#           sudo docker container rm --force mycontainer
#           sudo docker container prune -f
          
#           docker run -d -p 8080:8080 --name mycontainer jtamimi/ppu2023:latest
#           sudo systemctl stop 
#           sudo systemctl start 
        
          
          
          
          
#          host: ${{ secrets.DOCKER_SERVER_IP }}
#          user: ${{ secrets.AZURE_USR }}
#          key: ${{ secrets.DOCKER_SERVER_KEY }}
       
  
#   Deploy:
#     needs: build
#     runs-on: ubuntu-latest
#     steps:
    
        
#     - name: fetch code
#       uses: actions/checkout@v2
#     - name: Set up JDK 18
#       uses: actions/setup-java@v1
#       with:
#        java-version: 18
#     - name: Build with Maven
#       run: mvn -B package --file pom.xml
#     - name: deploy
#       uses: appleboy/scp-action@master
#       with:
#        HOST: ${{ secrets.AZURE_SERVER_IP }}
#        USERNAME: ${{ secrets.AZURE_USR }}
#        KEY: ${{ secrets.AZURE_SERVER_KEY }}
#        source: "target/ppu-1.0-SNAPSHOT.jar"
#        target: "deployment"
#     - name: run jar via ssh
#       uses: appleboy/ssh-action@master
#       with:
#        HOST: ${{ secrets.AZURE_SERVER_IP }}
#        USERNAME: ${{ secrets.AZURE_USR }}
#        KEY: ${{ secrets.AZURE_SERVER_KEY }}
#        script: |
#         #cd ~/deployment/target
#         #java -jar ppu-1.0-SNAPSHOT.jar
#         sudo systemctl stop swe.service
#         sudo systemctl start swe.service
